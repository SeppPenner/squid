Upstream patch from PR 212 resolves build issues on Hurd.

diff --git a/compat/cpu.h b/compat/cpu.h
index 54272480..d8dbe22c 100644
--- a/compat/cpu.h
+++ b/compat/cpu.h
@@ -18,7 +18,7 @@
 
 #if !HAVE_CPU_AFFINITY
 /* failing replacements to minimize the number of if-HAVE_CPU_AFFINITYs */
-#if !defined(__cpu_set_t_defined)
+#if !HAVE_CPU_SET_T
 typedef struct {
     int bits;
 } cpu_set_t;
diff --git a/configure b/configure
index 4f08dfd6..7f5dcc00 100755
--- a/configure
+++ b/configure
@@ -38732,6 +38732,19 @@ $as_echo "#define HAVE_MTYP_T 1" >>confdefs.h
 fi
 
 
+ac_fn_cxx_check_type "$LINENO" "cpu_set_t" "ac_cv_type_cpu_set_t" "
+#if HAVE_SCHED_H
+#include <sched.h>
+#endif
+
+"
+if test "x$ac_cv_type_cpu_set_t" = xyes; then :
+
+$as_echo "#define HAVE_CPU_SET_T 1" >>confdefs.h
+
+fi
+
+
 # check for compiler support of %zu printf macro
 
 { $as_echo "$as_me:${as_lineno-$LINENO}: checking for compiler %zu support" >&5
diff --git a/configure.ac b/configure.ac
index 6ba1c49b..198e1ba5 100644
--- a/configure.ac
+++ b/configure.ac
@@ -3026,6 +3026,13 @@ AC_CHECK_TYPE(mtyp_t,AC_DEFINE(HAVE_MTYP_T,1,
 #include <sys/ipc.h>
 #include <sys/msg.h>])
 
+AC_CHECK_TYPE(cpu_set_t,
+   AC_DEFINE(HAVE_CPU_SET_T,1,[cpu_set_t is defined by the system headers]),,[
+#if HAVE_SCHED_H
+#include <sched.h>
+#endif
+])
+
 # check for compiler support of %zu printf macro
 AH_TEMPLATE(PRIuSIZE,[Compiler supports %zu printf macro])
 AC_MSG_CHECKING([for compiler %zu support])
diff --git a/include/autoconf.h.in b/include/autoconf.h.in
index d0b164ce..c110bcb2 100644
--- a/include/autoconf.h.in
+++ b/include/autoconf.h.in
@@ -137,6 +137,9 @@
 /* Support setting CPU affinity for workers */
 #undef HAVE_CPU_AFFINITY
 
+/* cpu_set_t is defined by the system headers */
+#undef HAVE_CPU_SET_T
+
 /* Define to 1 if you have the `crypt' function. */
 #undef HAVE_CRYPT
 
