Description: Ignore Range headers with unidentifiable byte-range values
 If squid is unable to determine the byte value for ranges, treat the
 header as invalid.
Origin: upstream, http://www.squid-cache.org/Versions/v3/3.1/changesets/squid-3.1-10488.patch
Author: Amos Jeffries <squid3@treenet.co.nz>
Last-Update: 2014-08-27
Applied-Upstream: 3.3.13, 3.4.7

--- a/src/HttpHdrRange.cc
+++ b/src/HttpHdrRange.cc
@@ -93,7 +93,7 @@ HttpHdrRangeSpec::parseInit(const char *
 
     /* is it a suffix-byte-range-spec ? */
     if (*field == '-') {
-        if (!httpHeaderParseOffset(field + 1, &length))
+        if (!httpHeaderParseOffset(field + 1, &length) || !known_spec(length))
             return false;
     } else
         /* must have a '-' somewhere in _this_ field */
@@ -101,7 +101,7 @@ HttpHdrRangeSpec::parseInit(const char *
             debugs(64, 2, "invalid (missing '-') range-spec near: '" << field << "'");
             return false;
         } else {
-            if (!httpHeaderParseOffset(field, &offset))
+            if (!httpHeaderParseOffset(field, &offset) || !known_spec(offset))
                 return false;
 
             p++;
@@ -110,7 +110,7 @@ HttpHdrRangeSpec::parseInit(const char *
             if (p - field < flen) {
                 int64_t last_pos;
 
-                if (!httpHeaderParseOffset(p, &last_pos))
+                if (!httpHeaderParseOffset(p, &last_pos) || !known_spec(last_pos))
                     return false;
 
                 // RFC 2616 s14.35.1 MUST: last-byte-pos >= first-byte-pos
