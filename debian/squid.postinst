#! /bin/sh

set -e

#
# If the squid3 package was being used previously...
#
if test -d /etc/squid3 && dpkg --compare-versions "$2" lt '3.5'; then
	#
	# Remove obsolete MSNT helper config
	#
	dpkg-maintscript-helper rm_conffile \
		/etc/squid3/msntauth.conf 3.5.4-1~ squid3 -- "$@"

	#
	# Move old squid3 config files into position
	#
	dpkg-maintscript-helper mv_conffile \
		/etc/squid3/squid.conf /etc/squid/squid.conf 3.5.4-1~ squid3 -- "$@"

	dpkg-maintscript-helper mv_conffile \
		/etc/squid3/errorpage.css /etc/squid/errorpage.css 3.5.4-1~ squid3 -- "$@"
fi

grepconf () {
	w=" 	" # space tab
	# sed is cool.
	res=`squid -k parse 2>&1 |
		grep "Processing:" |
		sed s/.*Processing:\ // |
		sed -ne '
			s/^'$1'['"$w"']\+\([^'"$w"']\+\).*$/\1/p;
			t end;
			d;
			:end q'`
	[ -n "$res" ] || res=$2
	echo "$res"
}

grepconf2 () {
	w=" 	" # space tab
	# sed is cool.
	res=`squid -k parse 2>&1 |
		grep "Processing:" |
		sed s/.*Processing:\ // |
		sed -ne '
			s/^'$1'['"$w"']\+[^'"$w"']\+['"$w"']\+\([^'"$w"']\+\).*$/\1/p;
			t end;
			d;
			:end q'`
	[ -n "$res" ] || res=$2
	echo "$res"
}

case "$1" in
	configure)
		#
		# If the squid (2.7) package was being used previously we protected
		# the squid.conf file, which was not tracked as a conffile.
		# Use '< 2.8' version to catch backports and security versions >2.7.
		#
		if dpkg --compare-versions "$2" lt '2.8' && test -f /etc/squid/squid.conf.pre3.5_upgrade; then
			md5pre35=$(md5sum /etc/squid/squid.conf.pre3.5_upgrade | awk '{ print $1 }')
			if [ "$md5pre35" = "6d674d5f9842b50a2c691a135007c804" ] || \
				[ "$md5pre35" = "5d85f7dce9a84082e23a656b3cb0c984" ]; then
				# The old configuration file was unchanged from the version shipped
				# with squid 2.7, keep the new one in place and delete the old one.
				rm -f /etc/squid/squid.conf.pre3.5_upgrade
			else
				#
				# Our special 2.x protection left squid.conf absent,
				# so the new package installing put its own there.
				# It would normally have just created a *.dpkg-dist
				#
				mv /etc/squid/squid.conf /etc/squid/squid.conf.dpkg-dist

				#
				# Restore the old user file as main squid.conf
				#
				mv /etc/squid/squid.conf.pre3.5_upgrade /etc/squid/squid.conf
			fi
		fi

		#
		# Chown the directories.
		#
		log_dir=/var/log/squid
		cache_dir=`grepconf2 cache_dir /var/spool/squid`
		usr=`grepconf cache_effective_user proxy`
		grp=`grepconf cache_effective_group proxy`

		if [ "$(stat -c %U $cache_dir)" != "$usr" ] ||
		   [ "$(stat -c %G $cache_dir)" != "$grp" ] ; then
			chown $usr:$grp $cache_dir -R
		fi

		if [ "$(stat -c %U $log_dir)" != "$usr" ] ||
		   [ "$(stat -c %G $log_dir)" != "$grp" ] ; then
			if [ "$(dpkg-statoverride --list $log_dir)" = "" ] ; then
		  		chown -R $usr:$grp $log_dir
			fi
		fi

		# If we have setcap is installed, try setting cap_net_raw+ep,
		# which allows us to install our binaries without the setuid
		# bit.
		PINGER=/usr/lib/squid/pinger
		if command -v setcap > /dev/null; then
			if setcap cap_net_raw+ep $PINGER; then
				echo "Setcap worked! $PINGER is not suid!"
			else
				echo "Setcap failed on $PINGER, falling back to setuid" >&2
				chmod u+s $PINGER
			fi
		else
			echo "Setcap is not installed, falling back to setuid" >&2
			chmod u+s $PINGER
		fi
		#
		#	Update links if needed and start squid.
		#
		update-rc.d squid defaults 30 >/dev/null

		if [ -f /var/run/squid3.pid ] && kill -0 "$(cat /var/run/squid3.pid)" 2>/dev/null && dpkg --compare-versions "$2" lt '3.5'; then
			invoke-rc.d squid3 stop
			invoke-rc.d squid restart
		else
			invoke-rc.d squid restart
		fi

		;;
	abort-upgrade|abort-remove|abort-deconfigure)
		;;
	*)
		#
		#	Unknown action - do nothing.
		#
		exit 0
		;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
